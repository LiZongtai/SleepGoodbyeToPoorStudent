import numpy as np
import math
import matplotlib.pyplot as plt
f_test=np.array([ [1.5605,57.1427,1],[1.5605,57.1427,1],[1.5605,57.1427,1],[1.5605,57.1427,1],[1.4625,58.2343,1],[1.4625,58.2343,1],[1.4625,58.2343,1],[1.4625,58.2343,1],[1.4625,58.2343,1],[1.4625,58.2343,1],[1.4625,58.2343,1],[1.4625,58.2343,1],[4.7015,57.7197,3],[4.7015,57.7197,4],[4.7015,57.7197,8],[4.7015,57.7197,1],[4.7015,57.7197,2],[5.1778,57.717,1],[5.1778,57.717,4],[5.1778,57.717,2],[5.1778,57.717,1],[5.1778,57.717,1],[5.1778,57.717,1],[4.748,58.1103,5],[4.748,58.1103,4],[4.748,58.1103,9],[4.748,58.1103,3],[4.748,58.1103,1],[4.748,58.1103,1],[4.748,58.1103,1],[3.913,58.4718,1],[3.913,58.4718,3],[3.913,58.4718,1],[3.913,58.4718,1],[3.913,58.4718,1],[3.397,59.22,1],[3.397,59.22,1],[3.397,59.22,1],[3.397,59.22,2],[3.397,59.22,1],[0.935,59.194,2],[0.935,59.194,2],[0.935,59.194,4],[0.935,59.194,5],[0.935,59.194,1],[0.935,59.194,1],[0.935,59.194,1],[1.6815,59.2883,1],[1.6815,59.2883,8],[1.6815,59.2883,4],[1.6815,59.2883,2],[1.6815,59.2883,1],[1.6815,59.2883,3],[1.6815,59.2883,1],[2.0768,59.2788,1],[2.0768,59.2788,2],[2.0768,59.2788,1],[2.0768,59.2788,1],[2.0768,59.2788,2],[2.0768,59.2788,2],[2.0768,59.2788,1],[2.0768,59.2788,1],[2.0768,59.2788,1],[2.6233,61.054,1],[2.6233,61.054,4],[2.6233,61.054,4],[2.6233,61.054,4],[2.6233,61.054,7],[2.6233,61.054,9],[2.6233,61.054,4],[2.6233,61.054,1],[2.6233,61.054,6],[2.6233,61.054,11],[2.6233,61.054,7],[2.6233,61.054,14],[2.6233,61.054,11],[2.6233,61.054,4],[2.6233,61.054,4],[2.6233,61.054,2],[2.6233,61.054,3],[2.6233,61.054,2],[2.6233,61.054,2],[2.6233,61.054,1],[2.6233,61.054,3],[2.6233,61.054,1],[3.1107,60.1765,1],[3.1107,60.1765,5],[3.1107,60.1765,6],[3.1107,60.1765,1],[3.1107,60.1765,6],[3.1107,60.1765,9],[3.1107,60.1765,8],[3.1107,60.1765,2],[3.1107,60.1765,2],[3.1107,60.1765,3],[3.1107,60.1765,3],[3.1107,60.1765,5],[3.1107,60.1765,5],[3.1107,60.1765,1],[3.1107,60.1765,1],[3.1107,60.1765,1],[2.1072,60.2567,1],[2.1072,60.2567,9],[2.1072,60.2567,2],[2.1072,60.2567,3],[2.1072,60.2567,9],[2.1072,60.2567,12],[2.1072,60.2567,4],[2.1072,60.2567,6],[2.1072,60.2567,5],[2.1072,60.2567,7],[2.1072,60.2567,2],[2.1072,60.2567,5],[0.582,60.2538,3],[0.582,60.2538,13],[0.582,60.2538,6],[0.582,60.2538,2],[0.582,60.2538,3],[0.582,60.2538,4],[0.582,60.2538,6],[0.582,60.2538,3],[0.582,60.2538,1],[0.582,60.2538,6],[0.582,60.2538,1],[1.2357,60.3845,2],[1.2357,60.3845,2],[1.2357,60.3845,1],[1.2357,60.3845,2],[1.2357,60.3845,1],[1.2705,61.2068,7],[1.2705,61.2068,27],[1.2705,61.2068,11],[1.2705,61.2068,1],[1.2705,61.2068,8],[1.2705,61.2068,5],[1.2705,61.2068,1],[1.2705,61.2068,2],[1.2705,61.2068,1],[1.2705,61.2068,1],[1.2705,61.2068,1],[0.5742,61.2427,7],[0.5742,61.2427,11],[0.5742,61.2427,26],[0.5742,61.2427,9],[0.5742,61.2427,6],[0.5742,61.2427,17],[0.5742,61.2427,14],[0.5742,61.2427,4],[0.5742,61.2427,6],[0.5742,61.2427,4],[0.5742,61.2427,5],[0.5742,61.2427,7],[0.5742,61.2427,7],[0.5742,61.2427,5],[-0.3238,61.1977,1],[-0.3238,61.1977,1],[-0.3238,61.1977,8],[-0.3238,61.1977,6],[-0.3238,61.1977,3],[-0.3238,61.1977,1],[-0.3238,61.1977,1],[-0.3238,61.1977,8],[-0.3238,61.1977,10],[-0.3238,61.1977,6],[-0.3238,61.1977,1],[-0.3238,61.1977,5],[-0.3238,61.1977,9],[-0.3238,61.1977,3],[-0.3238,61.1977,5],[-0.3238,61.1977,3],[-0.3238,61.1977,2],[-1.1088,61.0068,3],[-1.1088,61.0068,4],[-1.1088,61.0068,4],[-1.1088,61.0068,5],[-1.1088,61.0068,10],[-1.1088,61.0068,2],[-1.1088,61.0068,3],[-1.1088,61.0068,3],[-0.5108,60.0123,2],[-0.5108,60.0123,10],[-0.5108,60.0123,49],[-0.5108,60.0123,38],[-0.5108,60.0123,2],[-0.5108,60.0123,4],[-0.5108,60.0123,20],[-0.5108,60.0123,9],[-0.5108,60.0123,7],[-0.5108,60.0123,5],[-0.5108,60.0123,10],[-0.5108,60.0123,6],[-0.5108,60.0123,5],[-0.5108,60.0123,5],[-0.5108,60.0123,3],[-0.5108,60.0123,1],[-0.5108,60.0123,1],[-0.4668,59.2248,2],[-0.4668,59.2248,2],[-0.4668,59.2248,1],[-0.4668,59.2248,2],[-0.4668,59.2248,1],[-0.4668,59.2248,2],[-0.4668,59.2248,5],[-1.1855,59.2775,1],[-1.1855,59.2775,2],[-1.1855,59.2775,2],[-1.1855,59.2775,9],[-1.1855,59.2775,3],[-1.1855,59.2775,4],[-1.1855,59.2775,16],[-1.1855,59.2775,18],[-1.1855,59.2775,15],[-1.1855,59.2775,17],[-1.1855,59.2775,10],[-1.1855,59.2775,12],[-1.1855,59.2775,9],[-1.1855,59.2775,8],[-1.1855,59.2775,6],[-2.565,58.3938,5],[-2.565,58.3938,6],[-2.565,58.3938,3],[-2.565,58.3938,1],[-2.565,58.3938,2],[-1.2343,58.0305,1],[-1.2343,58.0305,1],[-1.2343,58.0305,3],[-1.2343,58.0305,5],[-1.2343,58.0305,3],[-1.2343,58.0305,4],[-1.2343,58.0305,5],[-1.2343,58.0305,1],[-0.3057,57.8978,1],[-0.3057,57.8978,2],[-0.3057,57.8978,5],[-0.3057,57.8978,3],[-0.3057,57.8978,10],[-0.3057,57.8978,4],[-0.3057,57.8978,2],[-0.3057,57.8978,2],[-0.3057,57.8978,1],[-0.3057,57.8978,2],[-0.3057,57.8978,4],[-0.3057,57.8978,4],[-0.3057,57.8978,1],[-0.5403,58.2487,1],[-0.5403,58.2487,1],[-0.5403,58.2487,1],[-0.5403,58.2487,1],[-0.5403,58.2487,1],[-0.5403,58.2487,1],[0.7405,58.4087,1],[0.7405,58.4087,1],[0.7405,58.4087,1],[0.7405,58.4087,2],[0.7405,58.4087,3],[0.7405,58.4087,2],[0.7405,58.4087,1],[1.5005,57.8002,2],[1.5005,57.8002,1],[1.5005,57.8002,2],[1.5605,57.1427,1],[1.5605,57.1427,1],[1.5605,57.1427,1],[1.5605,57.1427,1],[1.4625,58.2343,1],[1.4625,58.2343,1],[1.4625,58.2343,1],[1.4625,58.2343,1],[1.4625,58.2343,1],[1.4625,58.2343,1],[1.4625,58.2343,1],[1.4625,58.2343,1],[4.7015,57.7197,3],[4.7015,57.7197,4],[4.7015,57.7197,8],[4.7015,57.7197,1],[4.7015,57.7197,2],[5.1778,57.717,1],[5.1778,57.717,4],[5.1778,57.717,2],[1.5005,57.8002,2],[1.5005,57.8002,1],[1.5005,57.8002,8],[1.5005,57.8002,7],[1.5005,57.8002,1],[1.5005,57.8002,2],[1.5005,57.8002,1],[0.5375,57.5367,1],[0.5375,57.5367,3],[0.5375,57.5367,2],[0.5375,57.5367,2],[0.5375,57.5367,1],[0.2262,57.0688,2],[0.2262,57.0688,1],[0.2262,57.0688,5],[0.2262,57.0688,12],[0.2262,57.0688,17],[0.2262,57.0688,4],[0.2262,57.0688,1],[0.2262,57.0688,1],[5.1778,57.717,1],[5.1778,57.717,1],[5.1778,57.717,1],[4.748,58.1103,5],[4.748,58.1103,4],[4.748,58.1103,9],[4.748,58.1103,3],[4.748,58.1103,1],[4.748,58.1103,1],[4.748,58.1103,1],[3.913,58.4718,1],[3.913,58.4718,3],[3.913,58.4718,1],[3.913,58.4718,1],[3.913,58.4718,1],[3.397,59.22,1],[3.397,59.22,1],[3.397,59.22,1],[3.397,59.22,2],[3.397,59.22,1],[0.935,59.194,2],[0.935,59.194,2],[0.935,59.194,4],[0.935,59.194,5],[0.935,59.194,1],[0.935,59.194,1],[0.935,59.194,1],[1.6815,59.2883,1],[1.6815,59.2883,8],[1.6815,59.2883,4],[1.6815,59.2883,2],[1.6815,59.2883,1],[1.6815,59.2883,3],[1.6815,59.2883,1],[2.0768,59.2788,1],[2.0768,59.2788,2],[2.0768,59.2788,1],[2.0768,59.2788,1],[2.0768,59.2788,2],[2.0768,59.2788,2],[2.0768,59.2788,1],[2.0768,59.2788,1],[2.0768,59.2788,1],[2.6233,61.054,1],[2.6233,61.054,4],[2.6233,61.054,4],[2.6233,61.054,4],[2.6233,61.054,7],[2.6233,61.054,9],[2.6233,61.054,4],[2.6233,61.054,1],[2.6233,61.054,6],[2.6233,61.054,11],[2.6233,61.054,7],[2.6233,61.054,14],[2.6233,61.054,11],[2.6233,61.054,4],[2.6233,61.054,4],[2.6233,61.054,2],[2.6233,61.054,3],[2.6233,61.054,2],[2.6233,61.054,2],[2.6233,61.054,1],[2.6233,61.054,3],[2.6233,61.054,1],[3.1107,60.1765,1],[3.1107,60.1765,5],[3.1107,60.1765,6],[3.1107,60.1765,1],[3.1107,60.1765,6],[3.1107,60.1765,9],[3.1107,60.1765,8],[3.1107,60.1765,2],[3.1107,60.1765,2],[3.1107,60.1765,3],[3.1107,60.1765,3],[3.1107,60.1765,5],[3.1107,60.1765,5],[3.1107,60.1765,1],[3.1107,60.1765,1],[3.1107,60.1765,1],[2.1072,60.2567,1],[2.1072,60.2567,9],[2.1072,60.2567,2],[2.1072,60.2567,3],[2.1072,60.2567,9],[2.1072,60.2567,12],[2.1072,60.2567,4],[2.1072,60.2567,6],[2.1072,60.2567,5],[2.1072,60.2567,7],[2.1072,60.2567,2],[2.1072,60.2567,5],[0.582,60.2538,3],[0.582,60.2538,13],[0.582,60.2538,6],[0.582,60.2538,2],[0.582,60.2538,3],[0.582,60.2538,4],[0.582,60.2538,6],[0.582,60.2538,3],[0.582,60.2538,1],[0.582,60.2538,6],[0.582,60.2538,1],[1.2357,60.3845,2],[1.2357,60.3845,2],[1.2357,60.3845,1],[1.2357,60.3845,2],[1.2357,60.3845,1],[1.2705,61.2068,7],[1.2705,61.2068,27],[1.2705,61.2068,11],[1.2705,61.2068,1],[1.2705,61.2068,8],[1.2705,61.2068,5],[1.2705,61.2068,1],[1.2705,61.2068,2],[1.2705,61.2068,1],[1.2705,61.2068,1],[1.2705,61.2068,1],[0.5742,61.2427,7],[0.5742,61.2427,11],[0.5742,61.2427,26],[0.5742,61.2427,9],[0.5742,61.2427,6],[0.5742,61.2427,17],[0.5742,61.2427,14],[0.5742,61.2427,4],[0.5742,61.2427,6],[0.5742,61.2427,4],[0.5742,61.2427,5],[0.5742,61.2427,7],[0.5742,61.2427,7],[0.5742,61.2427,5],[-0.3238,61.1977,1],[-0.3238,61.1977,1],[-0.3238,61.1977,8],[-0.3238,61.1977,6],[-0.3238,61.1977,3],[-0.3238,61.1977,1],[-0.3238,61.1977,1],[-0.3238,61.1977,8],[-0.3238,61.1977,10],[-0.3238,61.1977,6],[-0.3238,61.1977,1],[-0.3238,61.1977,5],[-0.3238,61.1977,9],[-0.3238,61.1977,3],[-0.3238,61.1977,5],[-0.3238,61.1977,3],[-0.3238,61.1977,2],[-1.1088,61.0068,3],[-1.1088,61.0068,4],[-1.1088,61.0068,4],[-1.1088,61.0068,5],[-1.1088,61.0068,10],[-1.1088,61.0068,2],[-1.1088,61.0068,3],[-1.1088,61.0068,3],[-0.5108,60.0123,2],[-0.5108,60.0123,10],[-0.5108,60.0123,49],[-0.5108,60.0123,38],[-0.5108,60.0123,2],[-0.5108,60.0123,4],[-0.5108,60.0123,20],[-0.5108,60.0123,9],[-0.5108,60.0123,7],[-0.5108,60.0123,5],[-0.5108,60.0123,10],[-0.5108,60.0123,6],[-0.5108,60.0123,5],[-0.5108,60.0123,5],[-0.5108,60.0123,3],[-0.5108,60.0123,1],[-0.5108,60.0123,1],[-0.4668,59.2248,2],[-0.4668,59.2248,2],[-0.4668,59.2248,1],[-0.4668,59.2248,2],[-0.4668,59.2248,1],[-0.4668,59.2248,2],[-0.4668,59.2248,5],[-1.1855,59.2775,1],[-1.1855,59.2775,2],[-1.1855,59.2775,2],[-1.1855,59.2775,9],[-1.1855,59.2775,3],[-1.1855,59.2775,4],[-1.1855,59.2775,16],[-1.1855,59.2775,18],[-1.1855,59.2775,15],[-1.1855,59.2775,17],[-1.1855,59.2775,10],[-1.1855,59.2775,12],[-1.1855,59.2775,9],[-1.1855,59.2775,8],[-1.1855,59.2775,6],[-2.565,58.3938,5],[-2.565,58.3938,6],[-2.565,58.3938,3],[-2.565,58.3938,1],[-2.565,58.3938,2],[-1.2343,58.0305,1],[-1.2343,58.0305,1],[-1.2343,58.0305,3],[-1.2343,58.0305,5],[-1.2343,58.0305,3],[-1.2343,58.0305,4],[-1.2343,58.0305,5],[-1.2343,58.0305,1],[-0.3057,57.8978,1],[-0.3057,57.8978,2],[-0.3057,57.8978,5],[-0.3057,57.8978,3],[-0.3057,57.8978,10],[-0.3057,57.8978,4],[-0.3057,57.8978,2],[-0.3057,57.8978,2],[-0.3057,57.8978,1],[-0.3057,57.8978,2],[-0.3057,57.8978,4],[-0.3057,57.8978,4],[-0.3057,57.8978,1],[-0.5403,58.2487,1],[-0.5403,58.2487,1],[-0.5403,58.2487,1],[-0.5403,58.2487,1],[-0.5403,58.2487,1],[-0.5403,58.2487,1],[0.7405,58.4087,1],[0.7405,58.4087,1],[0.7405,58.4087,1],[0.7405,58.4087,2],[0.7405,58.4087,3],[0.7405,58.4087,2],[0.7405,58.4087,1],[1.5005,57.8002,2],[1.5005,57.8002,1],[1.5005,57.8002,2],[1.5005,57.8002,2],[1.5005,57.8002,1],[1.5005,57.8002,8],[1.5005,57.8002,7],[1.5005,57.8002,1],[1.5005,57.8002,2],[1.5005,57.8002,1],[0.5375,57.5367,1],[0.5375,57.5367,3],[0.5375,57.5367,2],[0.5375,57.5367,2],[0.5375,57.5367,1],[0.2262,57.0688,2],[0.2262,57.0688,1],[0.2262,57.0688,5],[0.2262,57.0688,12],[0.2262,57.0688,17],[0.2262,57.0688,4],[0.2262,57.0688,1],[0.2262,57.0688,1],[1.5605,57.1427,1],[1.5605,57.1427,1],[1.5605,57.1427,1],[1.5605,57.1427,1],[1.4625,58.2343,1],[1.4625,58.2343,1],[1.4625,58.2343,1],[1.4625,58.2343,1],[1.4625,58.2343,1],[1.4625,58.2343,1],[1.4625,58.2343,1],[1.4625,58.2343,1],[4.7015,57.7197,3],[4.7015,57.7197,4],[4.7015,57.7197,8],[4.7015,57.7197,1],[4.7015,57.7197,2],[5.1778,57.717,1],[5.1778,57.717,4],[5.1778,57.717,2],[5.1778,57.717,1],[5.1778,57.717,1],[5.1778,57.717,1],[4.748,58.1103,5],[4.748,58.1103,4],[4.748,58.1103,9],[4.748,58.1103,3],[4.748,58.1103,1],[4.748,58.1103,1],[4.748,58.1103,1],[3.913,58.4718,1],[3.913,58.4718,3],[3.913,58.4718,1],[3.913,58.4718,1],[3.913,58.4718,1],[3.397,59.22,1],[3.397,59.22,1],[3.397,59.22,1],[3.397,59.22,2],[3.397,59.22,1],[0.935,59.194,2],[0.935,59.194,2],[0.935,59.194,4],[0.935,59.194,5],[0.935,59.194,1],[0.935,59.194,1],[0.935,59.194,1],[1.6815,59.2883,1],[1.6815,59.2883,8],[1.6815,59.2883,4],[1.6815,59.2883,2],[1.6815,59.2883,1],[1.6815,59.2883,3],[1.6815,59.2883,1],[2.0768,59.2788,1],[2.0768,59.2788,2],[2.0768,59.2788,1],[2.0768,59.2788,1],[2.0768,59.2788,2],[2.0768,59.2788,2],[2.0768,59.2788,1],[2.0768,59.2788,1],[2.0768,59.2788,1],[2.6233,61.054,1],[2.6233,61.054,4],[2.6233,61.054,4],[2.6233,61.054,4],[2.6233,61.054,7],[2.6233,61.054,9],[2.6233,61.054,4],[2.6233,61.054,1],[2.6233,61.054,6],[2.6233,61.054,11],[2.6233,61.054,7],[2.6233,61.054,14],[2.6233,61.054,11],[2.6233,61.054,4],[2.6233,61.054,4],[2.6233,61.054,2],[2.6233,61.054,3],[0.2262,57.0688,2],[0.333,56.7723,1],[-0.2487,57.0768,1],[-0.2487,57.0768,1],[-0.2487,57.0768,2],[-0.2487,57.0768,8],[-0.2487,57.0768,5],[-0.2487,57.0768,3],[-0.2487,57.0768,1],[-0.2487,57.0768,2],[-5.0217,54.1282,1],[-4.988,54.0042,1],[-5.5259,54.1226,1],[-5.328,54.1296,1],[-5.328,54.1296,1],[-5.6994,53.9493,4],[-5.6994,53.9493,2],[-5.6994,53.9493,1],[-5.6855,53.9814,3],[-5.6855,53.9814,1],[2.6233,61.054,2],[2.6233,61.054,2],[2.6233,61.054,1],[2.6233,61.054,3],[2.6233,61.054,1],[3.1107,60.1765,1],[3.1107,60.1765,5],[3.1107,60.1765,6],[3.1107,60.1765,1],[3.1107,60.1765,6],[3.1107,60.1765,9],[3.1107,60.1765,8],[3.1107,60.1765,2],[3.1107,60.1765,2],[3.1107,60.1765,3],[3.1107,60.1765,3],[3.1107,60.1765,5],[3.1107,60.1765,5],[3.1107,60.1765,1],[3.1107,60.1765,1],[3.1107,60.1765,1],[2.1072,60.2567,1],[2.1072,60.2567,9],[2.1072,60.2567,2],[2.1072,60.2567,3],[2.1072,60.2567,9],[2.1072,60.2567,12],[2.1072,60.2567,4],[2.1072,60.2567,6],[2.1072,60.2567,5],[2.1072,60.2567,7],[2.1072,60.2567,2],[2.1072,60.2567,5],[0.582,60.2538,3],[0.582,60.2538,13],[0.582,60.2538,6],[0.582,60.2538,2],[0.582,60.2538,3],[0.582,60.2538,4],[0.582,60.2538,6],[0.582,60.2538,3],[0.582,60.2538,1],[0.582,60.2538,6],[0.582,60.2538,1],[1.2357,60.3845,2],[1.2357,60.3845,2],[1.2357,60.3845,1],[1.2357,60.3845,2],[1.2357,60.3845,1],[1.2705,61.2068,7],[1.2705,61.2068,27],[1.2705,61.2068,11],[1.2705,61.2068,1],[1.2705,61.2068,8],[1.2705,61.2068,5],[1.2705,61.2068,1],[1.2705,61.2068,2],[1.2705,61.2068,1],[1.2705,61.2068,1],[1.2705,61.2068,1],[0.5742,61.2427,7],[0.5742,61.2427,11],[0.5742,61.2427,26],[0.5742,61.2427,9],[0.5742,61.2427,6],[0.5742,61.2427,17],[0.5742,61.2427,14],[0.5742,61.2427,4],[0.5742,61.2427,6],[0.5742,61.2427,4],[0.5742,61.2427,5],[0.5742,61.2427,7],[0.5742,61.2427,7],[0.5742,61.2427,5],[-0.3238,61.1977,1],[-0.3238,61.1977,1],[-0.3238,61.1977,8],[-0.3238,61.1977,6],[-0.3238,61.1977,3],[-0.3238,61.1977,1],[-0.3238,61.1977,1],[-0.3238,61.1977,8],[-0.3238,61.1977,10],[-0.3238,61.1977,6],[-0.3238,61.1977,1],[-0.3238,61.1977,5],[-0.3238,61.1977,9],[-0.3238,61.1977,3],[-0.3238,61.1977,5],[-0.3238,61.1977,3],[-0.3238,61.1977,2],[-1.1088,61.0068,3],[-1.1088,61.0068,4],[-1.1088,61.0068,4],[-1.1088,61.0068,5],[-1.1088,61.0068,10],[-1.1088,61.0068,2],[-1.1088,61.0068,3],[-1.1088,61.0068,3],[-0.5108,60.0123,2],[-0.5108,60.0123,10],[-0.5108,60.0123,49],[-0.5108,60.0123,38],[-0.5108,60.0123,2],[-0.5108,60.0123,4],[-0.5108,60.0123,20],[-0.5108,60.0123,9],[-0.5108,60.0123,7],[-0.5108,60.0123,5],[-0.5108,60.0123,10],[-0.5108,60.0123,6],[-0.5108,60.0123,5],[-0.5108,60.0123,5],[-0.5108,60.0123,3],[-0.5108,60.0123,1],[-0.5108,60.0123,1],[-0.4668,59.2248,2],[-0.4668,59.2248,2],[-0.4668,59.2248,1],[-0.4668,59.2248,2],[-0.4668,59.2248,1],[-0.4668,59.2248,2],[-0.4668,59.2248,5],[-1.1855,59.2775,1],[-1.1855,59.2775,2],[-1.1855,59.2775,2],[-1.1855,59.2775,9],[-1.1855,59.2775,3],[-1.1855,59.2775,4],[-1.1855,59.2775,16],[-1.1855,59.2775,18],[-1.1855,59.2775,15],[-1.1855,59.2775,17],[-1.1855,59.2775,10],[-1.1855,59.2775,12],[-1.1855,59.2775,9],[-1.1855,59.2775,8],[-1.1855,59.2775,6],[-2.565,58.3938,5],[-2.565,58.3938,6],[-2.565,58.3938,3],[-2.565,58.3938,1],[-2.565,58.3938,2],[-1.2343,58.0305,1],[-1.2343,58.0305,1],[-1.2343,58.0305,3],[-1.2343,58.0305,5],[-1.2343,58.0305,3],[-1.2343,58.0305,4],[-1.2343,58.0305,5],[-1.2343,58.0305,1],[-0.3057,57.8978,1],[-0.3057,57.8978,2],[-0.3057,57.8978,5],[-0.3057,57.8978,3],[-0.3057,57.8978,10],[-0.3057,57.8978,4],[-0.3057,57.8978,2],[-0.3057,57.8978,2],[-0.3057,57.8978,1],[-0.3057,57.8978,2],[-0.3057,57.8978,4],[-0.3057,57.8978,4],[-0.3057,57.8978,1],[-0.5403,58.2487,1],[-0.5403,58.2487,1],[-0.5403,58.2487,1],[-0.5403,58.2487,1],[-0.5403,58.2487,1],[-0.5403,58.2487,1],[0.7405,58.4087,1],[0.7405,58.4087,1],[0.7405,58.4087,1],[0.7405,58.4087,2],[0.7405,58.4087,3],[0.7405,58.4087,2],[0.7405,58.4087,1],[1.5005,57.8002,2],[1.5005,57.8002,1],[1.5005,57.8002,2],[1.5005,57.8002,2],[1.5005,57.8002,1],[1.5005,57.8002,8],[1.5005,57.8002,7],[1.5005,57.8002,1],[1.5005,57.8002,2],[1.5005,57.8002,1],[0.5375,57.5367,1],[0.5375,57.5367,3],[0.5375,57.5367,2],[0.5375,57.5367,2],[0.5375,57.5367,1],[0.2262,57.0688,2],[0.2262,57.0688,1],[0.2262,57.0688,5],[0.2262,57.0688,12],[0.2262,57.0688,17],[0.2262,57.0688,4],[0.2262,57.0688,1],[0.2262,57.0688,1],[-5.7699,53.8271,3],[-5.7699,53.8271,4],[-5.7699,53.8271,4],[-5.7699,53.8271,2],[-5.7699,53.8271,1],[-5.3986,54.2129,2],[-5.3986,54.2129,1],[-4.729,53.816,1],[-4.9868,54.0011,1],[-4.9868,54.0011,1],[-4.9868,54.0011,1],[-4.9868,54.0011,2],[-4.9868,54.0011,1],[0.2262,57.0688,2],[0.333,56.7723,1],[-0.2487,57.0768,1],[-0.2487,57.0768,1],[-0.2487,57.0768,2],[-0.2487,57.0768,8],[-0.2487,57.0768,5],[-0.2487,57.0768,3],[-0.2487,57.0768,1],[-0.2487,57.0768,2],[0.2262,57.0688,2],[0.333,56.7723,1],[-0.2487,57.0768,1],[-0.2487,57.0768,1],[-0.2487,57.0768,2],[-0.2487,57.0768,8],[-0.2487,57.0768,5],[-0.2487,57.0768,3],[-0.2487,57.0768,1],[-0.2487,57.0768,2] ])
# fish distribution begin state
f_bg=np.array ([
[-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[-1,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,1,1,1,1,9,1,1,1,1,1,0,0,0],
[0,0,0,0,0,0,0,1,5,1,1,5,1,1,1,7,1,0,0,0],
[0,0,0,0,0,0,0,1,1,1,1,7,9,1,1,1,1,1,0,0],
[0,0,0,0,0,0,1,1,1,1,1,9,2,1,0,1,5,1,0,0],
[0,0,0,0,0,0,1,7,3,1,1,1,1,1,1,1,1,1,0,0],
[0,0,0,0,1,1,1,5,2,3,1,1,3,4,2,1,1,2,1,1],
[0,0,0,0,1,3,1,1,1,1,1,2,2,1,1,1,1,2,2,1],
[0,0,0,0,1,1,1,2,3,1,1,5,1,2,1,1,5,1,1,-1],
[0,0,0,0,0,0,1,1,1,1,1,1,1,4,1,1,4,-1,-1,-1],
[0,0,0,0,0,0,0,0,0,1,6,4,1,2,1,0,-1,-1,-1,-1],
[0,0,0,0,0,0,0,0,0,1,2,1,1,1,1,0,-1,-1,-1,-1],
[0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,-1,-1,0],
[0,0,0,0,0,0,0,0,0,0,-1,-1,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,-1,-1,0,0,0,0,0,0,-1,0],
[1,1,1,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,-1,0],
[2,2,1,0,0,0,0,0,-1,-1,0,0,-1,0,0,0,0,0,-1,-1],
[1,1,1,0,0,0,0,0,-1,-1,0,-1,-1,-1,0,0,-1,-1,-1,-1],
[0,0,0,0,0,0,0,-1,0,0,0,-1,-1,-1,0,-1,-1,-1,-1,-1]])
# end state
f_ed=np.array ([
    [-1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
    [-1, 7, 8, 5, 0, 0, 0, 0, 0, 0, 1, 2, 1, 0, 0, 3, 0, 0, 0, 0], 
    [6, 2, 0, 5, 0, 0, 0, 0, 0, 0, 0, 6, 1, 0, 0, 6, 0, 0, 0, 0], 
    [1, 8, 1, 5, 0, 0, 0, 0, 4, 0, 0, 5, 1, 0, 0, 0, 0, 0, 0, 0], 
    [7, 1, 5, 0, 5, 2, 0, 0, 5, 0, 1, 5, 5, 1, 0, 0, 0, 0, 0, 0], 
    [8, 0, 4, 5, 0, 7, 5, 5, 5, 0, 1, 2, 0, 0, 0, 0, 7, 0, 0, 0], 
    [0, 0, 3, 0, 2, 3, 0, 0, 5, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0], 
    [0, 0, 5, 1, 5, 0, 4, 5, 5, 5, 5, 1, 1, 0, 0, 0, 0, 0, 0, 0], 
    [9, 1, 1, 6, 5, 5, 4, 1, 4, 1, 0, 5, 2, 5, 1, 0, 0, 0, 0, 0], 
    [0, 7, 8, 0, 0, 0, 0, 1, 3, 1, 1, 4, 0, 2, 1, 0, 0, 0, 0, -1], 
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 5, 0, 0, 0, -1, -1, -1], 
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1], 
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1], 
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, 0], 
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0], 
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, 0, 0, 0, 0, 0, 0, -1, 0], 
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, -1, 0], 
    [0, 0, 0, 0, 0, 0, 0, 0, -1, -1, 0, 0, -1, 0, 0, 0, 0, 0, -1, -1], 
    [0, 0, 0, 0, 0, 0, 0, 0, -1, -1, 0, -1, -1, -1, 0, 0, -1, -1, -1, -1], 
    [0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, -1, -1, -1, 0, -1, -1, -1, -1, -1]])

def trans2coordinate(f):
    la_bg=52.5
    lo_bg=-5.0
    mydata=np.array([[0.,0.,0.]])
    la_num,lo_num=f.shape
    for i in range(la_num):
        for j in range(lo_num):
            if(f[i][j]>0):
                # print([[la_bg+i*0.5,lo_bg+j*0.5,f[i][j]]])
                mydata=np.append(mydata,[[la_bg+i*0.5,lo_bg+j*0.5,f[i][j]]],axis=0)
    mydata=np.delete(mydata, 0, 0)
    return mydata 

# calculate distance
def euclDistance(vector1, vector2):
    return np.sqrt(sum((vector2 - vector1) ** 2))
# initiate centroids
def initCentroids(data, k):
    numSamples, dim = data.shape
    # k centroids
    centroids = np.zeros((k, dim))
    # random centroids
    for i in range(k):
        # random index from Samples
        index = int(np.random.uniform(0, numSamples))
        # initial centroid
        centroids[i, :] = data[index, :]
    return centroids

# read data set and k-value
def kmeans(data, k):
    # calculate nums of samples
    numSamples = data.shape[0]
    clusterData = np.array(np.zeros((numSamples, 2)))
    # decide whether change the centroids
    clusterChanged = True
    # initiate centroids
    centroids = initCentroids(data, k)
    while clusterChanged:
        clusterChanged = False
        for i in range(numSamples):
            minDist = 100000.0
            minIndex = 0
            for j in range(k):
                distance = euclDistance(centroids[j, :], data[i, :])
                if distance < minDist:
                    minDist = distance
                    # reflash the index
                    minIndex = j
            if clusterData[i, 0] != minIndex:
                clusterChanged = True
                clusterData[i, 0] = minIndex
        for j in range(k):
            cluster_index = np.nonzero(clusterData[:, 0] == j)
            pointsInCluster = data[cluster_index]
            centroids[j, :] = np.mean(pointsInCluster, axis=0)
    return centroids, clusterData
    
# # visible
# def showCluster(data, k, centroids, clusterData):
#     numSamples, dim = data.shape
#     if dim != 2:
#         print('dimension of your data is not 2!')
#         return 1
#     mark = ['or', 'ob', 'og', 'ok', '^r', '+r', 'dr', '<r', 'pr']
#     if k > len(mark):
#         print('your k is too large!')
#         return 1
#     for i in range(numSamples):
#         markIndex = int(clusterData[i, 0])
#         plt.plot(data[i, 0], data[i, 1], mark[markIndex])
#     mark = ['*r', '*b', '*g', '*k', '^b', '+b', 'sb', 'db', '<b', 'pb']
#     for i in range(k):
#         plt.plot(centroids[i, 0], centroids[i, 1], mark[i], markersize=20)
#     plt.show()

# calculate real distance (km)
EARTH_REDIUS = 6378.137
def rad(d):
    return d * math.pi / 180.0
def getDistance(lat1, lng1, lat2, lng2):
    radLat1 = rad(lat1)
    radLat2 = rad(lat2)
    a = radLat1 - radLat2
    b = rad(lng1) - rad(lng2)
    s = 2 * math.asin(math.sqrt(math.pow(math.sin(a/2), 2) + math.cos(radLat1) * math.cos(radLat2) * math.pow(math.sin(b/2), 2)))
    s = s * EARTH_REDIUS
    return s

# select centroids
def selectCent(cents,k):
    max_v=0
    max_i=0
    for i in range(k):
        if(cents[i][2]>=max_v):
            max_v=cents[i][2]
            max_i=i
    oneCent=[cents[max_i][0],cents[max_i][1],cents[max_i][2]]
    return oneCent


# k = 8
# centroids1, clusterData1 = kmeans(trans2coordinate(f_bg), k)
# centroids2, clusterData2 = kmeans(trans2coordinate(f_ed), k)
# centroids,clusterData=kmeans(f_test, k)
# # print(centroids)
# # oneCent=selectCent(centroids,k)
# # print(oneCent)
# # print("Distance_2port =",getDistance(oneCent[1],oneCent[0],57.09,2.03))
# print("k =",k)
# if np.isnan(centroids1).any() and np.isnan(centroids2).any():
#     print('Error')
# else:
#     # print("distribution begin")
#     # print(centroids1)
#     # print("distribution after")
#     # print(centroids2)
#     oneCent1=selectCent(centroids1,k)
#     oneCent2=selectCent(centroids2,k)
# # pos_bg=[centroids1[0][0],centroids1[0][1]]
# # pos_ed=[centroids2[0][0],centroids2[0][1]]
# print("Distance_bg2ed =",getDistance(oneCent1[0],oneCent1[1],oneCent2[0],oneCent2[1]))
# print("Distance_bg2port =",getDistance(oneCent1[0],oneCent1[1],57.09,2.03))
# print("Distance_ed2port =",getDistance(oneCent2[0],oneCent2[1],57.09,2.03))
